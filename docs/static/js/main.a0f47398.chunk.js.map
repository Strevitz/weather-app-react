{"version":3,"sources":["components/Form.jsx","components/Result.jsx","components/App.js","index.js"],"names":["Form","props","type","value","onChange","change","placeholder","Result","weather","err","city","date","sunrise","sunset","temp","pressure","wind","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","className","App","state","handleInputChange","e","setState","target","prevProps","prevState","this","length","API","fetch","then","res","ok","Error","json","data","time","toLocaleString","sys","main","speed","catch","console","log","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAeeA,EAbF,SAACC,GACZ,OACE,8BACE,2BACEC,KAAK,OACLC,MAAOF,EAAME,MACbC,SAAUH,EAAMI,OAChBC,YAAY,mBCmCLC,G,MAzCA,SAACN,GAAW,IAAD,EAUpBA,EAAMO,QARRC,EAFsB,EAEtBA,IACAC,EAHsB,EAGtBA,KACAC,EAJsB,EAItBA,KACAC,EALsB,EAKtBA,QACAC,EANsB,EAMtBA,OACAC,EAPsB,EAOtBA,KACAC,EARsB,EAQtBA,SACAC,EATsB,EAStBA,KAGEC,EAAU,KAEd,IAAKR,GAAOC,EAAM,CAChB,IAAMQ,EAAc,IAAIC,KAAe,IAAVP,GAAgBQ,qBAEvCC,EAAa,IAAIF,KAAc,IAATN,GAAeO,qBAE3CH,EACE,oCACE,8DACiC,4BAAKP,IAEtC,sDAA4BC,GAC5B,qDAA2BG,EAA3B,UACA,2DAAoBI,GACpB,2DAAoBG,GACpB,+CAAgBN,EAAhB,QACA,+DAAsBC,EAAtB,SAKN,OACE,yBAAKM,UAAU,UACZb,EAAG,iBAAaC,EAAb,iBAAmCO,KCyE9BM,G,kNAxGbC,MAAQ,CACNrB,MAAO,GACPQ,KAAM,GACND,KAAM,GACNE,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNP,IAAK,I,EAGPgB,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZxB,MAAOuB,EAAEE,OAAOzB,S,iEAwCD0B,EAAWC,GAAY,IAAD,OACvC,GAAgC,IAA5BC,KAAKP,MAAMrB,MAAM6B,QACjBF,EAAU3B,QAAU4B,KAAKP,MAAMrB,MAAO,CACxC,IAAM8B,EAAG,2DAAuDF,KAAKP,MAAMrB,MAAlE,kBA5DA,mCA4DA,iBAET+B,MAAMD,GACHE,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAET,MAAME,MAAM,4BAEbH,MAAK,SAACC,GAAD,OAASA,EAAIG,UAClBJ,MAAK,SAACK,GACL,IAAMC,GAAO,IAAItB,MAAOuB,iBACxB,EAAKf,SAAS,CACZlB,KAAK,EACLE,KAAM8B,EACN7B,QAAS4B,EAAKG,IAAI/B,QAClBC,OAAQ2B,EAAKG,IAAI9B,OACjBC,KAAM0B,EAAKI,KAAK9B,KAChBC,SAAUyB,EAAKI,KAAK7B,SACpBC,KAAMwB,EAAKxB,KAAK6B,MAChBnC,KAAM,EAAKc,MAAMrB,WAGpB2C,OAAM,SAACrC,GACNsC,QAAQC,IAAIvC,GACZ,EAAKkB,SAAS,CACZlB,KAAK,EACLC,KAAM,EAAKc,MAAMrB,WAIvB4B,KAAKJ,SAAS,CACZxB,MAAO4B,KAAKP,MAAMrB,W,+BAMtB,OACE,yBAAKmB,UAAU,OACb,kBAAC,EAAD,CAAMnB,MAAO4B,KAAKP,MAAMrB,MAAOE,OAAQ0B,KAAKN,oBAC5C,kBAAC,EAAD,CAAQjB,QAASuB,KAAKP,a,GAnGZyB,cCFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a0f47398.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = (props) => {\n  return (\n    <form>\n      <input\n        type=\"text\"\n        value={props.value}\n        onChange={props.change}\n        placeholder=\"Wpisz miasto\"\n      />\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./Result.css\";\n\nconst Result = (props) => {\n  const {\n    err,\n    city,\n    date,\n    sunrise,\n    sunset,\n    temp,\n    pressure,\n    wind,\n  } = props.weather;\n\n  let content = null;\n\n  if (!err && city) {\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\n\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\n\n    content = (\n      <>\n        <h3>\n          Informacje pogodowe dla miasta <em>{city}</em>\n        </h3>\n        <h4>Dane z dnia i godziny: {date}</h4>\n        <h4>Aktualna temperatura: {temp} &#176;C</h4>\n        <h4>Wschód słońca: {sunriseTime}</h4>\n        <h4>Zachód słońca: {sunsetTime}</h4>\n        <h4>Ciśnienie: {pressure} hPa</h4>\n        <h4>Prędkość wiatru: {wind} m/s</h4>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"result\">\n      {err ? `Miasto ${city} nie istnieje` : content}\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Result from \"./Result\";\nimport \"./App.css\";\n//Open Weather API Key\nconst APIKey = \"090afe4c5614f135af4bd562af797d31\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    date: \"\",\n    city: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    temp: \"\",\n    pressure: \"\",\n    wind: \"\",\n    err: \"\",\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n  /*\n  handleCitySubmit = (e) => {\n    e.preventDefault();\n    console.log(\"potwierdzony form\");\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`;\n\n    fetch(API)\n      .then((res) => {\n        if (res.ok) {\n          return res;\n        }\n        throw Error(\"Nie ma takiego miasta\");\n      })\n      .then((res) => res.json())\n      .then((data) => {\n        const time = new Date().toLocaleString();\n        this.setState({\n          err: false,\n          date: time,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          city: this.state.value,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          err: true,\n          city: this.state.value,\n        });\n      });\n  };\n*/\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.value.length === 0) return;\n    if (prevState.value !== this.state.value) {\n      const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`;\n\n      fetch(API)\n        .then((res) => {\n          if (res.ok) {\n            return res;\n          }\n          throw Error(\"Nie ma takiego miasta\");\n        })\n        .then((res) => res.json())\n        .then((data) => {\n          const time = new Date().toLocaleString();\n          this.setState({\n            err: false,\n            date: time,\n            sunrise: data.sys.sunrise,\n            sunset: data.sys.sunset,\n            temp: data.main.temp,\n            pressure: data.main.pressure,\n            wind: data.wind.speed,\n            city: this.state.value,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({\n            err: true,\n            city: this.state.value,\n          });\n        });\n\n      this.setState({\n        value: this.state.value,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form value={this.state.value} change={this.handleInputChange} />\n        <Result weather={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}